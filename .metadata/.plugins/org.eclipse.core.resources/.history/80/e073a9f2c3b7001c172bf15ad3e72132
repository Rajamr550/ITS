package com.olx.service;

import java.time.LocalDate;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.olx.dto.Adv;
import com.olx.entity.AdvEntity;

@Service
public class AdvServiceImpl implements AdvService {

    @Autowired
    EntityManager entityManager;// generated by jpa

    @Override
    public Adv postAdvertise(Adv adv) {
	// TODO Auto-generated method stub
	return null;
    }

    @Override
    public Adv updateAdvertise(Adv adv) {
	// TODO Auto-generated method stub
	return null;
    }

    @Override
    public List<Adv> getAllAdvByUser() {
	// TODO Auto-generated method stub

	return null;
    }

//13.............
    @Override
    public List<AdvertiseDTO> searchAdvertisesByFilterCriteria(String searchText, int categoryId, String postedBy,
    String dateCondition, LocalDate onDate, LocalDate fromDate, LocalDate toDate,
    String sortedBy, int startIndex, int records) {

    CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();
    CriteriaQuery<AdvertiseEntity> criteriaQuery = criteriaBuilder.createQuery(AdvertiseEntity.class);
    Root<AdvertiseEntity> rootEntity = criteriaQuery.from(AdvertiseEntity.class);

    Predicate predicateTitle = criteriaBuilder.and();
    Predicate predicateDescription = criteriaBuilder.and();
    Predicate predicateSearchText = criteriaBuilder.and();
    Predicate predicateCategory = criteriaBuilder.and();
    Predicate predicateDateCondition = criteriaBuilder.and();
    Predicate predicatePostedBy = criteriaBuilder.and();
    Predicate predicateFinal = criteriaBuilder.and();

    if(searchText!=null && !"".equalsIgnoreCase(searchText)) {
    predicateTitle = criteriaBuilder.like(rootEntity.get("title"), "%" + searchText + "%");
    predicateDescription = criteriaBuilder.like(rootEntity.get("description"), "%" + searchText + "%");
    predicateSearchText = criteriaBuilder.or(predicateTitle, predicateDescription);
    }
    //Write a code to create predicates for dateConditions, categoryId, posted_by etc.
    predicateFinal = criteriaBuilder.and(predicateSearchText, predicateCategory, predicateDateCondition,
    predicatePostedBy);
    criteriaQuery.where(predicateFinal);
    TypedQuery<AdvertiseEntity> typedQuery = entityManager.createQuery(criteriaQuery);
    typedQuery.setFirstResult(startIndex);
    typedQuery.setMaxResults(records);
    List<AdvertiseEntity> advertiseEntityList = typedQuery.getResultList();
    return convertEntityListIntoDTOList(advertiseEntityList);
    }

    @Override
    public List<Adv> getAdvByUser() {
	// TODO Auto-generated method stub
	return null;
    }

    @Override
    public Adv SearchAdvByText(String searchText) {
	// TODO Auto-generated method stub
	return null;
    }

    @Override
    public Adv returnAdv(int id) {
	// TODO Auto-generated method stub
	return null;
    }

}
