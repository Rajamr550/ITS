package com.olx.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;

import com.olx.dto.Adv;
import com.olx.service.AdvService;

@WebMvcTest(AdvController.class)
class AdvControllerTest {

    @Autowired
    MockMvc mockMvc;

    @MockBean
    AdvService advService;

    @Autowired
    AdvController advController;

    @Test
    void testsearchAdvsByFilterCriteria() throws Exception {
	List<Adv> advDto = new ArrayList<Adv>();
	advDto.add(new Adv());
	advDto.add(new Adv());
	when(this.advService.searchAdvertisesByFilterCriteria(null, 0, null, null, null, null, null, null, 0, 10))
		.thenReturn(advDto);

	MvcResult mvcResult = this.mockMvc.perform(get("http://localhost:9002/olx/advertise/search/filtercriteria")
		.param("category", "0").param("startIndex", "0")).andExpect(status().isOk()).andReturn();

	String response = mvcResult.getResponse().getContentAsString();
	assertEquals(response.contains("title"), true);
    }
}